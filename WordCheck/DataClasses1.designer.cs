#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WordCheck
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="drillthrall")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdata_dictionary(data_dictionary instance);
    partial void Updatedata_dictionary(data_dictionary instance);
    partial void Deletedata_dictionary(data_dictionary instance);
    partial void Insertdata_wordcorrect(data_wordcorrect instance);
    partial void Updatedata_wordcorrect(data_wordcorrect instance);
    partial void Deletedata_wordcorrect(data_wordcorrect instance);
    partial void Insertdata_drill_dictionary(data_drill_dictionary instance);
    partial void Updatedata_drill_dictionary(data_drill_dictionary instance);
    partial void Deletedata_drill_dictionary(data_drill_dictionary instance);
    partial void Insertdata_drill(data_drill instance);
    partial void Updatedata_drill(data_drill instance);
    partial void Deletedata_drill(data_drill instance);
    partial void Insertdata_sentencecorrect(data_sentencecorrect instance);
    partial void Updatedata_sentencecorrect(data_sentencecorrect instance);
    partial void Deletedata_sentencecorrect(data_sentencecorrect instance);
    partial void Insertdata_sentencedrill(data_sentencedrill instance);
    partial void Updatedata_sentencedrill(data_sentencedrill instance);
    partial void Deletedata_sentencedrill(data_sentencedrill instance);
    partial void Insertdata_sentencedrills_sentence(data_sentencedrills_sentence instance);
    partial void Updatedata_sentencedrills_sentence(data_sentencedrills_sentence instance);
    partial void Deletedata_sentencedrills_sentence(data_sentencedrills_sentence instance);
    partial void Insertdata_sentence(data_sentence instance);
    partial void Updatedata_sentence(data_sentence instance);
    partial void Deletedata_sentence(data_sentence instance);
    partial void Insertdata_wordconfusion(data_wordconfusion instance);
    partial void Updatedata_wordconfusion(data_wordconfusion instance);
    partial void Deletedata_wordconfusion(data_wordconfusion instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WordCheck.Properties.Settings.Default.drillthrallConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<data_dictionary> data_dictionaries
		{
			get
			{
				return this.GetTable<data_dictionary>();
			}
		}
		
		public System.Data.Linq.Table<data_wordcorrect> data_wordcorrects
		{
			get
			{
				return this.GetTable<data_wordcorrect>();
			}
		}
		
		public System.Data.Linq.Table<data_drill_dictionary> data_drill_dictionaries
		{
			get
			{
				return this.GetTable<data_drill_dictionary>();
			}
		}
		
		public System.Data.Linq.Table<data_drill> data_drills
		{
			get
			{
				return this.GetTable<data_drill>();
			}
		}
		
		public System.Data.Linq.Table<data_sentencecorrect> data_sentencecorrects
		{
			get
			{
				return this.GetTable<data_sentencecorrect>();
			}
		}
		
		public System.Data.Linq.Table<data_sentencedrill> data_sentencedrills
		{
			get
			{
				return this.GetTable<data_sentencedrill>();
			}
		}
		
		public System.Data.Linq.Table<data_sentencedrills_sentence> data_sentencedrills_sentences
		{
			get
			{
				return this.GetTable<data_sentencedrills_sentence>();
			}
		}
		
		public System.Data.Linq.Table<data_sentence> data_sentences
		{
			get
			{
				return this.GetTable<data_sentence>();
			}
		}
		
		public System.Data.Linq.Table<data_wordconfusion> data_wordconfusions
		{
			get
			{
				return this.GetTable<data_wordconfusion>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pr_AddCorrectRecord")]
		public int pr_AddCorrectRecord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> drillid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> wordid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> milliseconds, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datecorrect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), drillid, wordid, milliseconds, datecorrect);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pr_AddMistakeRecord")]
		public int pr_AddMistakeRecord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> drillid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> wordid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string incorrectword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), drillid, wordid, incorrectword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pr_AddCorrectSentenceRecord")]
		public int pr_AddCorrectSentenceRecord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> drillid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> sentenceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> milliseconds, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datecorrect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), drillid, sentenceid, milliseconds, datecorrect);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pr_LookupWord")]
		public ISingleResult<pr_LookupWordResult> pr_LookupWord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string word)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word);
			return ((ISingleResult<pr_LookupWordResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.pr_AddDictionaryEntry")]
		public int pr_AddDictionaryEntry([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string steno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string english)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), steno, english);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_dictionary")]
	public partial class data_dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _steno;
		
		private string _english;
		
		private EntitySet<data_wordcorrect> _data_wordcorrects;
		
		private EntitySet<data_drill_dictionary> _data_drill_dictionaries;
		
		private EntitySet<data_wordconfusion> _data_wordconfusions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnstenoChanging(string value);
    partial void OnstenoChanged();
    partial void OnenglishChanging(string value);
    partial void OnenglishChanged();
    #endregion
		
		public data_dictionary()
		{
			this._data_wordcorrects = new EntitySet<data_wordcorrect>(new Action<data_wordcorrect>(this.attach_data_wordcorrects), new Action<data_wordcorrect>(this.detach_data_wordcorrects));
			this._data_drill_dictionaries = new EntitySet<data_drill_dictionary>(new Action<data_drill_dictionary>(this.attach_data_drill_dictionaries), new Action<data_drill_dictionary>(this.detach_data_drill_dictionaries));
			this._data_wordconfusions = new EntitySet<data_wordconfusion>(new Action<data_wordconfusion>(this.attach_data_wordconfusions), new Action<data_wordconfusion>(this.detach_data_wordconfusions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string steno
		{
			get
			{
				return this._steno;
			}
			set
			{
				if ((this._steno != value))
				{
					this.OnstenoChanging(value);
					this.SendPropertyChanging();
					this._steno = value;
					this.SendPropertyChanged("steno");
					this.OnstenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_english", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string english
		{
			get
			{
				return this._english;
			}
			set
			{
				if ((this._english != value))
				{
					this.OnenglishChanging(value);
					this.SendPropertyChanging();
					this._english = value;
					this.SendPropertyChanged("english");
					this.OnenglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_wordcorrect", Storage="_data_wordcorrects", ThisKey="id", OtherKey="wordid")]
		public EntitySet<data_wordcorrect> data_wordcorrects
		{
			get
			{
				return this._data_wordcorrects;
			}
			set
			{
				this._data_wordcorrects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_drill_dictionary", Storage="_data_drill_dictionaries", ThisKey="id", OtherKey="dictionaryid")]
		public EntitySet<data_drill_dictionary> data_drill_dictionaries
		{
			get
			{
				return this._data_drill_dictionaries;
			}
			set
			{
				this._data_drill_dictionaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_wordconfusion", Storage="_data_wordconfusions", ThisKey="id", OtherKey="wordid")]
		public EntitySet<data_wordconfusion> data_wordconfusions
		{
			get
			{
				return this._data_wordconfusions;
			}
			set
			{
				this._data_wordconfusions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_data_wordcorrects(data_wordcorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = this;
		}
		
		private void detach_data_wordcorrects(data_wordcorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = null;
		}
		
		private void attach_data_drill_dictionaries(data_drill_dictionary entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = this;
		}
		
		private void detach_data_drill_dictionaries(data_drill_dictionary entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = null;
		}
		
		private void attach_data_wordconfusions(data_wordconfusion entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = this;
		}
		
		private void detach_data_wordconfusions(data_wordconfusion entity)
		{
			this.SendPropertyChanging();
			entity.data_dictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_wordcorrect")]
	public partial class data_wordcorrect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _drillid;
		
		private long _wordid;
		
		private long _msspeed;
		
		private System.DateTime _date;
		
		private EntityRef<data_dictionary> _data_dictionary;
		
		private EntityRef<data_drill> _data_drill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillidChanging(System.Nullable<long> value);
    partial void OndrillidChanged();
    partial void OnwordidChanging(long value);
    partial void OnwordidChanged();
    partial void OnmsspeedChanging(long value);
    partial void OnmsspeedChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public data_wordcorrect()
		{
			this._data_dictionary = default(EntityRef<data_dictionary>);
			this._data_drill = default(EntityRef<data_drill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillid", DbType="BigInt")]
		public System.Nullable<long> drillid
		{
			get
			{
				return this._drillid;
			}
			set
			{
				if ((this._drillid != value))
				{
					if (this._data_drill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndrillidChanging(value);
					this.SendPropertyChanging();
					this._drillid = value;
					this.SendPropertyChanged("drillid");
					this.OndrillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="BigInt NOT NULL")]
		public long wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._data_dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msspeed", DbType="BigInt NOT NULL")]
		public long msspeed
		{
			get
			{
				return this._msspeed;
			}
			set
			{
				if ((this._msspeed != value))
				{
					this.OnmsspeedChanging(value);
					this.SendPropertyChanging();
					this._msspeed = value;
					this.SendPropertyChanged("msspeed");
					this.OnmsspeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_wordcorrect", Storage="_data_dictionary", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public data_dictionary data_dictionary
		{
			get
			{
				return this._data_dictionary.Entity;
			}
			set
			{
				data_dictionary previousValue = this._data_dictionary.Entity;
				if (((previousValue != value) 
							|| (this._data_dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_dictionary.Entity = null;
						previousValue.data_wordcorrects.Remove(this);
					}
					this._data_dictionary.Entity = value;
					if ((value != null))
					{
						value.data_wordcorrects.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(long);
					}
					this.SendPropertyChanged("data_dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_wordcorrect", Storage="_data_drill", ThisKey="drillid", OtherKey="id", IsForeignKey=true)]
		public data_drill data_drill
		{
			get
			{
				return this._data_drill.Entity;
			}
			set
			{
				data_drill previousValue = this._data_drill.Entity;
				if (((previousValue != value) 
							|| (this._data_drill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_drill.Entity = null;
						previousValue.data_wordcorrects.Remove(this);
					}
					this._data_drill.Entity = value;
					if ((value != null))
					{
						value.data_wordcorrects.Add(this);
						this._drillid = value.id;
					}
					else
					{
						this._drillid = default(Nullable<long>);
					}
					this.SendPropertyChanged("data_drill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_drill_dictionary")]
	public partial class data_drill_dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _drillid;
		
		private long _dictionaryid;
		
		private EntityRef<data_dictionary> _data_dictionary;
		
		private EntityRef<data_drill> _data_drill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillidChanging(long value);
    partial void OndrillidChanged();
    partial void OndictionaryidChanging(long value);
    partial void OndictionaryidChanged();
    #endregion
		
		public data_drill_dictionary()
		{
			this._data_dictionary = default(EntityRef<data_dictionary>);
			this._data_drill = default(EntityRef<data_drill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillid", DbType="BigInt NOT NULL")]
		public long drillid
		{
			get
			{
				return this._drillid;
			}
			set
			{
				if ((this._drillid != value))
				{
					if (this._data_drill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndrillidChanging(value);
					this.SendPropertyChanging();
					this._drillid = value;
					this.SendPropertyChanged("drillid");
					this.OndrillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dictionaryid", DbType="BigInt NOT NULL")]
		public long dictionaryid
		{
			get
			{
				return this._dictionaryid;
			}
			set
			{
				if ((this._dictionaryid != value))
				{
					if (this._data_dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndictionaryidChanging(value);
					this.SendPropertyChanging();
					this._dictionaryid = value;
					this.SendPropertyChanged("dictionaryid");
					this.OndictionaryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_drill_dictionary", Storage="_data_dictionary", ThisKey="dictionaryid", OtherKey="id", IsForeignKey=true)]
		public data_dictionary data_dictionary
		{
			get
			{
				return this._data_dictionary.Entity;
			}
			set
			{
				data_dictionary previousValue = this._data_dictionary.Entity;
				if (((previousValue != value) 
							|| (this._data_dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_dictionary.Entity = null;
						previousValue.data_drill_dictionaries.Remove(this);
					}
					this._data_dictionary.Entity = value;
					if ((value != null))
					{
						value.data_drill_dictionaries.Add(this);
						this._dictionaryid = value.id;
					}
					else
					{
						this._dictionaryid = default(long);
					}
					this.SendPropertyChanged("data_dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_drill_dictionary", Storage="_data_drill", ThisKey="drillid", OtherKey="id", IsForeignKey=true)]
		public data_drill data_drill
		{
			get
			{
				return this._data_drill.Entity;
			}
			set
			{
				data_drill previousValue = this._data_drill.Entity;
				if (((previousValue != value) 
							|| (this._data_drill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_drill.Entity = null;
						previousValue.data_drill_dictionaries.Remove(this);
					}
					this._data_drill.Entity = value;
					if ((value != null))
					{
						value.data_drill_dictionaries.Add(this);
						this._drillid = value.id;
					}
					else
					{
						this._drillid = default(long);
					}
					this.SendPropertyChanged("data_drill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_drills")]
	public partial class data_drill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _drillname;
		
		private EntitySet<data_wordcorrect> _data_wordcorrects;
		
		private EntitySet<data_drill_dictionary> _data_drill_dictionaries;
		
		private EntitySet<data_wordconfusion> _data_wordconfusions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillnameChanging(string value);
    partial void OndrillnameChanged();
    #endregion
		
		public data_drill()
		{
			this._data_wordcorrects = new EntitySet<data_wordcorrect>(new Action<data_wordcorrect>(this.attach_data_wordcorrects), new Action<data_wordcorrect>(this.detach_data_wordcorrects));
			this._data_drill_dictionaries = new EntitySet<data_drill_dictionary>(new Action<data_drill_dictionary>(this.attach_data_drill_dictionaries), new Action<data_drill_dictionary>(this.detach_data_drill_dictionaries));
			this._data_wordconfusions = new EntitySet<data_wordconfusion>(new Action<data_wordconfusion>(this.attach_data_wordconfusions), new Action<data_wordconfusion>(this.detach_data_wordconfusions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string drillname
		{
			get
			{
				return this._drillname;
			}
			set
			{
				if ((this._drillname != value))
				{
					this.OndrillnameChanging(value);
					this.SendPropertyChanging();
					this._drillname = value;
					this.SendPropertyChanged("drillname");
					this.OndrillnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_wordcorrect", Storage="_data_wordcorrects", ThisKey="id", OtherKey="drillid")]
		public EntitySet<data_wordcorrect> data_wordcorrects
		{
			get
			{
				return this._data_wordcorrects;
			}
			set
			{
				this._data_wordcorrects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_drill_dictionary", Storage="_data_drill_dictionaries", ThisKey="id", OtherKey="drillid")]
		public EntitySet<data_drill_dictionary> data_drill_dictionaries
		{
			get
			{
				return this._data_drill_dictionaries;
			}
			set
			{
				this._data_drill_dictionaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_wordconfusion", Storage="_data_wordconfusions", ThisKey="id", OtherKey="drillid")]
		public EntitySet<data_wordconfusion> data_wordconfusions
		{
			get
			{
				return this._data_wordconfusions;
			}
			set
			{
				this._data_wordconfusions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_data_wordcorrects(data_wordcorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = this;
		}
		
		private void detach_data_wordcorrects(data_wordcorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = null;
		}
		
		private void attach_data_drill_dictionaries(data_drill_dictionary entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = this;
		}
		
		private void detach_data_drill_dictionaries(data_drill_dictionary entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = null;
		}
		
		private void attach_data_wordconfusions(data_wordconfusion entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = this;
		}
		
		private void detach_data_wordconfusions(data_wordconfusion entity)
		{
			this.SendPropertyChanging();
			entity.data_drill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_sentencecorrect")]
	public partial class data_sentencecorrect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _drillid;
		
		private long _sentenceid;
		
		private long _msspeed;
		
		private System.DateTime _date;
		
		private EntityRef<data_sentencedrill> _data_sentencedrill;
		
		private EntityRef<data_sentence> _data_sentence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillidChanging(System.Nullable<long> value);
    partial void OndrillidChanged();
    partial void OnsentenceidChanging(long value);
    partial void OnsentenceidChanged();
    partial void OnmsspeedChanging(long value);
    partial void OnmsspeedChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public data_sentencecorrect()
		{
			this._data_sentencedrill = default(EntityRef<data_sentencedrill>);
			this._data_sentence = default(EntityRef<data_sentence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillid", DbType="BigInt")]
		public System.Nullable<long> drillid
		{
			get
			{
				return this._drillid;
			}
			set
			{
				if ((this._drillid != value))
				{
					if (this._data_sentencedrill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndrillidChanging(value);
					this.SendPropertyChanging();
					this._drillid = value;
					this.SendPropertyChanged("drillid");
					this.OndrillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentenceid", DbType="BigInt NOT NULL")]
		public long sentenceid
		{
			get
			{
				return this._sentenceid;
			}
			set
			{
				if ((this._sentenceid != value))
				{
					if (this._data_sentence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsentenceidChanging(value);
					this.SendPropertyChanging();
					this._sentenceid = value;
					this.SendPropertyChanged("sentenceid");
					this.OnsentenceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msspeed", DbType="BigInt NOT NULL")]
		public long msspeed
		{
			get
			{
				return this._msspeed;
			}
			set
			{
				if ((this._msspeed != value))
				{
					this.OnmsspeedChanging(value);
					this.SendPropertyChanging();
					this._msspeed = value;
					this.SendPropertyChanged("msspeed");
					this.OnmsspeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentencedrill_data_sentencecorrect", Storage="_data_sentencedrill", ThisKey="drillid", OtherKey="id", IsForeignKey=true)]
		public data_sentencedrill data_sentencedrill
		{
			get
			{
				return this._data_sentencedrill.Entity;
			}
			set
			{
				data_sentencedrill previousValue = this._data_sentencedrill.Entity;
				if (((previousValue != value) 
							|| (this._data_sentencedrill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_sentencedrill.Entity = null;
						previousValue.data_sentencecorrects.Remove(this);
					}
					this._data_sentencedrill.Entity = value;
					if ((value != null))
					{
						value.data_sentencecorrects.Add(this);
						this._drillid = value.id;
					}
					else
					{
						this._drillid = default(Nullable<long>);
					}
					this.SendPropertyChanged("data_sentencedrill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentence_data_sentencecorrect", Storage="_data_sentence", ThisKey="sentenceid", OtherKey="id", IsForeignKey=true)]
		public data_sentence data_sentence
		{
			get
			{
				return this._data_sentence.Entity;
			}
			set
			{
				data_sentence previousValue = this._data_sentence.Entity;
				if (((previousValue != value) 
							|| (this._data_sentence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_sentence.Entity = null;
						previousValue.data_sentencecorrects.Remove(this);
					}
					this._data_sentence.Entity = value;
					if ((value != null))
					{
						value.data_sentencecorrects.Add(this);
						this._sentenceid = value.id;
					}
					else
					{
						this._sentenceid = default(long);
					}
					this.SendPropertyChanged("data_sentence");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_sentencedrills")]
	public partial class data_sentencedrill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _drillname;
		
		private EntitySet<data_sentencecorrect> _data_sentencecorrects;
		
		private EntitySet<data_sentencedrills_sentence> _data_sentencedrills_sentences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillnameChanging(string value);
    partial void OndrillnameChanged();
    #endregion
		
		public data_sentencedrill()
		{
			this._data_sentencecorrects = new EntitySet<data_sentencecorrect>(new Action<data_sentencecorrect>(this.attach_data_sentencecorrects), new Action<data_sentencecorrect>(this.detach_data_sentencecorrects));
			this._data_sentencedrills_sentences = new EntitySet<data_sentencedrills_sentence>(new Action<data_sentencedrills_sentence>(this.attach_data_sentencedrills_sentences), new Action<data_sentencedrills_sentence>(this.detach_data_sentencedrills_sentences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string drillname
		{
			get
			{
				return this._drillname;
			}
			set
			{
				if ((this._drillname != value))
				{
					this.OndrillnameChanging(value);
					this.SendPropertyChanging();
					this._drillname = value;
					this.SendPropertyChanged("drillname");
					this.OndrillnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentencedrill_data_sentencecorrect", Storage="_data_sentencecorrects", ThisKey="id", OtherKey="drillid")]
		public EntitySet<data_sentencecorrect> data_sentencecorrects
		{
			get
			{
				return this._data_sentencecorrects;
			}
			set
			{
				this._data_sentencecorrects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentencedrill_data_sentencedrills_sentence", Storage="_data_sentencedrills_sentences", ThisKey="id", OtherKey="sentencedrillid")]
		public EntitySet<data_sentencedrills_sentence> data_sentencedrills_sentences
		{
			get
			{
				return this._data_sentencedrills_sentences;
			}
			set
			{
				this._data_sentencedrills_sentences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_data_sentencecorrects(data_sentencecorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_sentencedrill = this;
		}
		
		private void detach_data_sentencecorrects(data_sentencecorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_sentencedrill = null;
		}
		
		private void attach_data_sentencedrills_sentences(data_sentencedrills_sentence entity)
		{
			this.SendPropertyChanging();
			entity.data_sentencedrill = this;
		}
		
		private void detach_data_sentencedrills_sentences(data_sentencedrills_sentence entity)
		{
			this.SendPropertyChanging();
			entity.data_sentencedrill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_sentencedrills_sentences")]
	public partial class data_sentencedrills_sentence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _sentencedrillid;
		
		private long _sentenceid;
		
		private EntityRef<data_sentencedrill> _data_sentencedrill;
		
		private EntityRef<data_sentence> _data_sentence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsentencedrillidChanging(long value);
    partial void OnsentencedrillidChanged();
    partial void OnsentenceidChanging(long value);
    partial void OnsentenceidChanged();
    #endregion
		
		public data_sentencedrills_sentence()
		{
			this._data_sentencedrill = default(EntityRef<data_sentencedrill>);
			this._data_sentence = default(EntityRef<data_sentence>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentencedrillid", DbType="BigInt NOT NULL")]
		public long sentencedrillid
		{
			get
			{
				return this._sentencedrillid;
			}
			set
			{
				if ((this._sentencedrillid != value))
				{
					if (this._data_sentencedrill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsentencedrillidChanging(value);
					this.SendPropertyChanging();
					this._sentencedrillid = value;
					this.SendPropertyChanged("sentencedrillid");
					this.OnsentencedrillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentenceid", DbType="BigInt NOT NULL")]
		public long sentenceid
		{
			get
			{
				return this._sentenceid;
			}
			set
			{
				if ((this._sentenceid != value))
				{
					if (this._data_sentence.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsentenceidChanging(value);
					this.SendPropertyChanging();
					this._sentenceid = value;
					this.SendPropertyChanged("sentenceid");
					this.OnsentenceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentencedrill_data_sentencedrills_sentence", Storage="_data_sentencedrill", ThisKey="sentencedrillid", OtherKey="id", IsForeignKey=true)]
		public data_sentencedrill data_sentencedrill
		{
			get
			{
				return this._data_sentencedrill.Entity;
			}
			set
			{
				data_sentencedrill previousValue = this._data_sentencedrill.Entity;
				if (((previousValue != value) 
							|| (this._data_sentencedrill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_sentencedrill.Entity = null;
						previousValue.data_sentencedrills_sentences.Remove(this);
					}
					this._data_sentencedrill.Entity = value;
					if ((value != null))
					{
						value.data_sentencedrills_sentences.Add(this);
						this._sentencedrillid = value.id;
					}
					else
					{
						this._sentencedrillid = default(long);
					}
					this.SendPropertyChanged("data_sentencedrill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentence_data_sentencedrills_sentence", Storage="_data_sentence", ThisKey="sentenceid", OtherKey="id", IsForeignKey=true)]
		public data_sentence data_sentence
		{
			get
			{
				return this._data_sentence.Entity;
			}
			set
			{
				data_sentence previousValue = this._data_sentence.Entity;
				if (((previousValue != value) 
							|| (this._data_sentence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_sentence.Entity = null;
						previousValue.data_sentencedrills_sentences.Remove(this);
					}
					this._data_sentence.Entity = value;
					if ((value != null))
					{
						value.data_sentencedrills_sentences.Add(this);
						this._sentenceid = value.id;
					}
					else
					{
						this._sentenceid = default(long);
					}
					this.SendPropertyChanged("data_sentence");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_sentences")]
	public partial class data_sentence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _sentence;
		
		private EntitySet<data_sentencecorrect> _data_sentencecorrects;
		
		private EntitySet<data_sentencedrills_sentence> _data_sentencedrills_sentences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsentenceChanging(string value);
    partial void OnsentenceChanged();
    #endregion
		
		public data_sentence()
		{
			this._data_sentencecorrects = new EntitySet<data_sentencecorrect>(new Action<data_sentencecorrect>(this.attach_data_sentencecorrects), new Action<data_sentencecorrect>(this.detach_data_sentencecorrects));
			this._data_sentencedrills_sentences = new EntitySet<data_sentencedrills_sentence>(new Action<data_sentencedrills_sentence>(this.attach_data_sentencedrills_sentences), new Action<data_sentencedrills_sentence>(this.detach_data_sentencedrills_sentences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentence", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sentence
		{
			get
			{
				return this._sentence;
			}
			set
			{
				if ((this._sentence != value))
				{
					this.OnsentenceChanging(value);
					this.SendPropertyChanging();
					this._sentence = value;
					this.SendPropertyChanged("sentence");
					this.OnsentenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentence_data_sentencecorrect", Storage="_data_sentencecorrects", ThisKey="id", OtherKey="sentenceid")]
		public EntitySet<data_sentencecorrect> data_sentencecorrects
		{
			get
			{
				return this._data_sentencecorrects;
			}
			set
			{
				this._data_sentencecorrects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_sentence_data_sentencedrills_sentence", Storage="_data_sentencedrills_sentences", ThisKey="id", OtherKey="sentenceid")]
		public EntitySet<data_sentencedrills_sentence> data_sentencedrills_sentences
		{
			get
			{
				return this._data_sentencedrills_sentences;
			}
			set
			{
				this._data_sentencedrills_sentences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_data_sentencecorrects(data_sentencecorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_sentence = this;
		}
		
		private void detach_data_sentencecorrects(data_sentencecorrect entity)
		{
			this.SendPropertyChanging();
			entity.data_sentence = null;
		}
		
		private void attach_data_sentencedrills_sentences(data_sentencedrills_sentence entity)
		{
			this.SendPropertyChanging();
			entity.data_sentence = this;
		}
		
		private void detach_data_sentencedrills_sentences(data_sentencedrills_sentence entity)
		{
			this.SendPropertyChanging();
			entity.data_sentence = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.data_wordconfusions")]
	public partial class data_wordconfusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _drillid;
		
		private long _wordid;
		
		private string _incorrectword;
		
		private System.DateTime _incorrectdate;
		
		private EntityRef<data_dictionary> _data_dictionary;
		
		private EntityRef<data_drill> _data_drill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndrillidChanging(System.Nullable<long> value);
    partial void OndrillidChanged();
    partial void OnwordidChanging(long value);
    partial void OnwordidChanged();
    partial void OnincorrectwordChanging(string value);
    partial void OnincorrectwordChanged();
    partial void OnincorrectdateChanging(System.DateTime value);
    partial void OnincorrectdateChanged();
    #endregion
		
		public data_wordconfusion()
		{
			this._data_dictionary = default(EntityRef<data_dictionary>);
			this._data_drill = default(EntityRef<data_drill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drillid", DbType="BigInt")]
		public System.Nullable<long> drillid
		{
			get
			{
				return this._drillid;
			}
			set
			{
				if ((this._drillid != value))
				{
					if (this._data_drill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndrillidChanging(value);
					this.SendPropertyChanging();
					this._drillid = value;
					this.SendPropertyChanged("drillid");
					this.OndrillidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="BigInt NOT NULL")]
		public long wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._data_dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incorrectword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string incorrectword
		{
			get
			{
				return this._incorrectword;
			}
			set
			{
				if ((this._incorrectword != value))
				{
					this.OnincorrectwordChanging(value);
					this.SendPropertyChanging();
					this._incorrectword = value;
					this.SendPropertyChanged("incorrectword");
					this.OnincorrectwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incorrectdate", DbType="DateTime NOT NULL")]
		public System.DateTime incorrectdate
		{
			get
			{
				return this._incorrectdate;
			}
			set
			{
				if ((this._incorrectdate != value))
				{
					this.OnincorrectdateChanging(value);
					this.SendPropertyChanging();
					this._incorrectdate = value;
					this.SendPropertyChanged("incorrectdate");
					this.OnincorrectdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_dictionary_data_wordconfusion", Storage="_data_dictionary", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public data_dictionary data_dictionary
		{
			get
			{
				return this._data_dictionary.Entity;
			}
			set
			{
				data_dictionary previousValue = this._data_dictionary.Entity;
				if (((previousValue != value) 
							|| (this._data_dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_dictionary.Entity = null;
						previousValue.data_wordconfusions.Remove(this);
					}
					this._data_dictionary.Entity = value;
					if ((value != null))
					{
						value.data_wordconfusions.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(long);
					}
					this.SendPropertyChanged("data_dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="data_drill_data_wordconfusion", Storage="_data_drill", ThisKey="drillid", OtherKey="id", IsForeignKey=true)]
		public data_drill data_drill
		{
			get
			{
				return this._data_drill.Entity;
			}
			set
			{
				data_drill previousValue = this._data_drill.Entity;
				if (((previousValue != value) 
							|| (this._data_drill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._data_drill.Entity = null;
						previousValue.data_wordconfusions.Remove(this);
					}
					this._data_drill.Entity = value;
					if ((value != null))
					{
						value.data_wordconfusions.Add(this);
						this._drillid = value.id;
					}
					else
					{
						this._drillid = default(Nullable<long>);
					}
					this.SendPropertyChanged("data_drill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class pr_LookupWordResult
	{
		
		private string _steno;
		
		public pr_LookupWordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_steno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string steno
		{
			get
			{
				return this._steno;
			}
			set
			{
				if ((this._steno != value))
				{
					this._steno = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
